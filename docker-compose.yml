version: '3.7'



### Networks Setup ############################################

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}

### Volumes Setup #############################################

volumes:
  postgres:
    driver: ${VOLUMES_DRIVER}

services:

### Workspace Utilities Container ###########################

    workspace:
      build:
        context: ./docker/workspace
        args:
          - LARADOCK_PHP_VERSION=${PHP_VERSION}
          - COMPOSER_GLOBAL_INSTALL=${WORKSPACE_COMPOSER_GLOBAL_INSTALL}
          - COMPOSER_REPO_PACKAGIST=${WORKSPACE_COMPOSER_REPO_PACKAGIST}
          - INSTALL_NODE=${WORKSPACE_INSTALL_NODE}
          - NODE_VERSION=${WORKSPACE_NODE_VERSION}
          - INSTALL_XDEBUG=${WORKSPACE_INSTALL_XDEBUG}
          - NPM_REGISTRY=${WORKSPACE_NPM_REGISTRY}
          - INSTALL_YARN=${WORKSPACE_INSTALL_YARN}
          - INSTALL_PHPREDIS=${WORKSPACE_INSTALL_PHPREDIS}
          - INSTALL_WORKSPACE_SSH=${WORKSPACE_INSTALL_WORKSPACE_SSH}
          - INSTALL_LARAVEL_ENVOY=${WORKSPACE_INSTALL_LARAVEL_ENVOY}
          - INSTALL_LARAVEL_INSTALLER=${WORKSPACE_INSTALL_LARAVEL_INSTALLER}
          - INSTALL_IMAGEMAGICK=${WORKSPACE_INSTALL_IMAGEMAGICK}
          - PUID=${WORKSPACE_PUID}
          - PGID=${WORKSPACE_PGID}
          - TZ=${WORKSPACE_TIMEZONE}
      volumes:
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      extra_hosts:
        - "dockerhost:${DOCKER_HOST_IP}"
      ports:
        - "${WORKSPACE_SSH_PORT}:22"
      tty: true
      environment:
        - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
        # - DOCKER_HOST=tcp://docker-in-docker:2375
      networks:
        - frontend
        - backend
      # links:
        # - docker-in-docker

### PHP-FPM Container #######################################

    php-fpm:
      build:
        context: ./docker/php-fpm
        args:
          - LARADOCK_PHP_VERSION=${PHP_VERSION}
          - INSTALL_ZIP_ARCHIVE=${PHP_FPM_INSTALL_ZIP_ARCHIVE}
          - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
          - INSTALL_INTL=${PHP_FPM_INSTALL_INTL}
          - INSTALL_IMAGEMAGICK=${PHP_FPM_INSTALL_IMAGEMAGICK}
          - INSTALL_IMAGE_OPTIMIZERS=${PHP_FPM_INSTALL_IMAGE_OPTIMIZERS}
          - INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS}
          - INSTALL_WKHTMLTOPDF=${PHP_FPM_INSTALL_WKHTMLTOPDF}
          - INSTALL_GD_ARCHIVE=${PHP_FPM_INSTALL_GD_ARCHIVE}
          - INSTALL_XML_ARCHIVE=${PHP_FPM_INSTALL_XML_ARCHIVE}
          - INSTALL_BCMATH=${PHP_FPM_INSTALL_BCMATH}
      volumes:
        - ./docker/php-fpm/php${PHP_VERSION}.ini:/usr/local/etc/php/php.ini
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      expose:
        - "9000"
      depends_on:
        - workspace
      extra_hosts:
        - "dockerhost:${DOCKER_HOST_IP}"
      environment:
        - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
        - FAKETIME=${PHP_FPM_FAKETIME}
        # - DOCKER_HOST=tcp://docker-in-docker:2375
      networks:
        - backend

### Nginx Server Container ##################################

    nginx:
      build:
        context: ./docker/nginx
        args:
          - PHP_UPSTREAM=php-fpm
      volumes:
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
        - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
        - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
        - ${NGINX_SSL_PATH}:/etc/nginx/ssl
      ports:
        - "${NGINX_HOST_HTTP_PORT}:80"
        - "${NGINX_HOST_HTTPS_PORT}:443"
      depends_on:
        - php-fpm
      environment:
        - SERVER_NAME=${SERVER_NAME}
      #é a única forma de passar variáveis de ambiente para a conf do nginx, lembre-se de escapar com $$ as variáveis
      command: /bin/bash -c "envsubst '$$SERVER_NAME' < /etc/nginx/sites-available/.default.conf.template > /etc/nginx/sites-available/default.conf && exec nginx"
      networks:
        - frontend
        - backend


### PostgreSQL PostGis Container ############################

    postgres:
      build: ./docker/postgres
      volumes:
        - ${DATA_PATH_HOST}/postgres:/var/lib/postgresql/data
        # - ${POSTGRES_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
      ports:
        - "${POSTGRES_PORT}:5432"
      environment:
        - POSTGRES_DB=${DB_DATABASE}
        - POSTGRES_USER=${DB_USERNAME}
        - POSTGRES_PASSWORD=${DB_PASSWORD}
      networks:
        - backend

### PHP Worker Container #####################################
    php-worker:
      build:
        context: ./docker/php-worker
        args:
          - PHP_VERSION=${PHP_VERSION}
          - INSTALL_PGSQL=${PHP_WORKER_INSTALL_PGSQL}
          - PUID=${PHP_WORKER_PUID}
          - PGID=${PHP_WORKER_PGID}
          - INSTALL_BCMATH=${PHP_WORKER_INSTALL_BCMATH}

      volumes:
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
        - ./docker/php-worker/supervisord.d:/etc/supervisord.d
      depends_on:
        - workspace
      extra_hosts:
        - "dockerhost:${DOCKER_HOST_IP}"
      networks:
        - backend
      environment:
        - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
### pgAdmin Container #######################################

    pgadmin:
      build: ./docker/pgadmin
      environment:
        - "PGADMIN_DEFAULT_EMAIL=pgadmin4@pgadmin.org"
        - "PGADMIN_DEFAULT_PASSWORD=password"
      ports:
        - "5050:5050"
      depends_on:
        - postgres
      volumes:
        - ${DATA_PATH_HOST}/pgadmin:/var/lib/pgadmin
      networks:
        - frontend
        - backend

# ### Docker-in-Docker ################################################
#     docker-in-docker:
#       image: docker:dind
#       privileged: true
#       volumes:
#         - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
#       expose:
#         - 2375
#       networks:
#         - backend
